/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Chatroom, ChatroomInterface } from "../Chatroom";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "getChat",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "string",
            name: "content",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Chatroom.Message[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isUser",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610db8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632efcb62f146100465780634209fff114610076578063de6f24bb146100a6575b600080fd5b610060600480360381019061005b919061076f565b6100c2565b60405161006d919061096f565b60405180910390f35b610090600480360381019061008b919061076f565b6102c3565b60405161009d91906109ac565b60405180910390f35b6100c060048036038101906100bb9190610afc565b61035d565b005b606033826100cf826102c3565b61010e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010590610bb5565b60405180910390fd5b610117816102c3565b610156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014d90610c21565b60405180910390fd5b6001600061016433876105c2565b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156102b657838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461021b90610c70565b80601f016020809104026020016040519081016040528092919081815260200182805461024790610c70565b80156102945780601f1061026957610100808354040283529160200191610294565b820191906000526020600020905b81548152906001019060200180831161027757829003601f168201915b5050505050815260200160028201548152505081526020019060010190610192565b5050505092505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b3382610368826102c3565b6103a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039e90610bb5565b60405180910390fd5b6103b0816102c3565b6103ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e690610c21565b60405180910390fd5b600083511415610434576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042b90610cee565b60405180910390fd5b6001600061044233876105c2565b815260200190815260200160002060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200185815260200142815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061050d92919061065a565b506040820151816002015550506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201849080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16101561062857828260405160200161060b929190610d56565b604051602081830303815290604052805190602001209050610654565b818360405160200161063b929190610d56565b6040516020818303038152906040528051906020012090505b92915050565b82805461066690610c70565b90600052602060002090601f01602090048101928261068857600085556106cf565b82601f106106a157805160ff19168380011785556106cf565b828001600101855582156106cf579182015b828111156106ce5782518255916020019190600101906106b3565b5b5090506106dc91906106e0565b5090565b5b808211156106f95760008160009055506001016106e1565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061073c82610711565b9050919050565b61074c81610731565b811461075757600080fd5b50565b60008135905061076981610743565b92915050565b60006020828403121561078557610784610707565b5b60006107938482850161075a565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6107d181610731565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156108115780820151818401526020810190506107f6565b83811115610820576000848401525b50505050565b6000601f19601f8301169050919050565b6000610842826107d7565b61084c81856107e2565b935061085c8185602086016107f3565b61086581610826565b840191505092915050565b6000819050919050565b61088381610870565b82525050565b60006060830160008301516108a160008601826107c8565b50602083015184820360208601526108b98282610837565b91505060408301516108ce604086018261087a565b508091505092915050565b60006108e58383610889565b905092915050565b6000602082019050919050565b60006109058261079c565b61090f81856107a7565b935083602082028501610921856107b8565b8060005b8581101561095d578484038952815161093e85826108d9565b9450610949836108ed565b925060208a01995050600181019050610925565b50829750879550505050505092915050565b6000602082019050818103600083015261098981846108fa565b905092915050565b60008115159050919050565b6109a681610991565b82525050565b60006020820190506109c1600083018461099d565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a0982610826565b810181811067ffffffffffffffff82111715610a2857610a276109d1565b5b80604052505050565b6000610a3b6106fd565b9050610a478282610a00565b919050565b600067ffffffffffffffff821115610a6757610a666109d1565b5b610a7082610826565b9050602081019050919050565b82818337600083830152505050565b6000610a9f610a9a84610a4c565b610a31565b905082815260208101848484011115610abb57610aba6109cc565b5b610ac6848285610a7d565b509392505050565b600082601f830112610ae357610ae26109c7565b5b8135610af3848260208601610a8c565b91505092915050565b60008060408385031215610b1357610b12610707565b5b6000610b218582860161075a565b925050602083013567ffffffffffffffff811115610b4257610b4161070c565b5b610b4e85828601610ace565b9150509250929050565b600082825260208201905092915050565b7f7573657231202169735573657200000000000000000000000000000000000000600082015250565b6000610b9f600d83610b58565b9150610baa82610b69565b602082019050919050565b60006020820190508181036000830152610bce81610b92565b9050919050565b7f7573657232202169735573657200000000000000000000000000000000000000600082015250565b6000610c0b600d83610b58565b9150610c1682610bd5565b602082019050919050565b60006020820190508181036000830152610c3a81610bfe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610c8857607f821691505b60208210811415610c9c57610c9b610c41565b5b50919050565b7f6d6573736167652e6c656e677468203d3d203000000000000000000000000000600082015250565b6000610cd8601383610b58565b9150610ce382610ca2565b602082019050919050565b60006020820190508181036000830152610d0781610ccb565b9050919050565b60008160601b9050919050565b6000610d2682610d0e565b9050919050565b6000610d3882610d1b565b9050919050565b610d50610d4b82610731565b610d2d565b82525050565b6000610d628285610d3f565b601482019150610d728284610d3f565b601482019150819050939250505056fea2646970667358221220515ed3a50ab2a4a9bc40d7355daf20f2b907288a5c048069279e5df54743cf1064736f6c634300080a0033";

type ChatroomConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChatroomConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Chatroom__factory extends ContractFactory {
  constructor(...args: ChatroomConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Chatroom";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Chatroom> {
    return super.deploy(overrides || {}) as Promise<Chatroom>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Chatroom {
    return super.attach(address) as Chatroom;
  }
  connect(signer: Signer): Chatroom__factory {
    return super.connect(signer) as Chatroom__factory;
  }
  static readonly contractName: "Chatroom";
  public readonly contractName: "Chatroom";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChatroomInterface {
    return new utils.Interface(_abi) as ChatroomInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Chatroom {
    return new Contract(address, _abi, signerOrProvider) as Chatroom;
  }
}
