/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Chatroom, ChatroomInterface } from "../Chatroom";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "getChat",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "string",
            name: "content",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Chatroom.Message[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isUser",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d1c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632efcb62f146100465780634209fff114610076578063de6f24bb146100a6575b600080fd5b610060600480360381019061005b91906106d3565b6100c2565b60405161006d91906108d3565b60405180910390f35b610090600480360381019061008b91906106d3565b6102c3565b60405161009d9190610910565b60405180910390f35b6100c060048036038101906100bb9190610a60565b61035d565b005b606033826100cf826102c3565b61010e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010590610b19565b60405180910390fd5b610117816102c3565b610156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014d90610b85565b60405180910390fd5b600160006101643387610526565b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156102b657838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461021b90610bd4565b80601f016020809104026020016040519081016040528092919081815260200182805461024790610bd4565b80156102945780601f1061026957610100808354040283529160200191610294565b820191906000526020600020905b81548152906001019060200180831161027757829003601f168201915b5050505050815260200160028201548152505081526020019060010190610192565b5050505092505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b3382610368826102c3565b6103a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039e90610b19565b60405180910390fd5b6103b0816102c3565b6103ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e690610b85565b60405180910390fd5b600083511415610434576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042b90610c52565b60405180910390fd5b6000600160006104443388610526565b815260200190815260200160002090508060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200186815260200142815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906105129291906105be565b506040820151816002015550505050505050565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16101561058c57828260405160200161056f929190610cba565b6040516020818303038152906040528051906020012090506105b8565b818360405160200161059f929190610cba565b6040516020818303038152906040528051906020012090505b92915050565b8280546105ca90610bd4565b90600052602060002090601f0160209004810192826105ec5760008555610633565b82601f1061060557805160ff1916838001178555610633565b82800160010185558215610633579182015b82811115610632578251825591602001919060010190610617565b5b5090506106409190610644565b5090565b5b8082111561065d576000816000905550600101610645565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106a082610675565b9050919050565b6106b081610695565b81146106bb57600080fd5b50565b6000813590506106cd816106a7565b92915050565b6000602082840312156106e9576106e861066b565b5b60006106f7848285016106be565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61073581610695565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561077557808201518184015260208101905061075a565b83811115610784576000848401525b50505050565b6000601f19601f8301169050919050565b60006107a68261073b565b6107b08185610746565b93506107c0818560208601610757565b6107c98161078a565b840191505092915050565b6000819050919050565b6107e7816107d4565b82525050565b6000606083016000830151610805600086018261072c565b506020830151848203602086015261081d828261079b565b915050604083015161083260408601826107de565b508091505092915050565b600061084983836107ed565b905092915050565b6000602082019050919050565b600061086982610700565b610873818561070b565b9350836020820285016108858561071c565b8060005b858110156108c157848403895281516108a2858261083d565b94506108ad83610851565b925060208a01995050600181019050610889565b50829750879550505050505092915050565b600060208201905081810360008301526108ed818461085e565b905092915050565b60008115159050919050565b61090a816108f5565b82525050565b60006020820190506109256000830184610901565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61096d8261078a565b810181811067ffffffffffffffff8211171561098c5761098b610935565b5b80604052505050565b600061099f610661565b90506109ab8282610964565b919050565b600067ffffffffffffffff8211156109cb576109ca610935565b5b6109d48261078a565b9050602081019050919050565b82818337600083830152505050565b6000610a036109fe846109b0565b610995565b905082815260208101848484011115610a1f57610a1e610930565b5b610a2a8482856109e1565b509392505050565b600082601f830112610a4757610a4661092b565b5b8135610a578482602086016109f0565b91505092915050565b60008060408385031215610a7757610a7661066b565b5b6000610a85858286016106be565b925050602083013567ffffffffffffffff811115610aa657610aa5610670565b5b610ab285828601610a32565b9150509250929050565b600082825260208201905092915050565b7f7573657231202169735573657200000000000000000000000000000000000000600082015250565b6000610b03600d83610abc565b9150610b0e82610acd565b602082019050919050565b60006020820190508181036000830152610b3281610af6565b9050919050565b7f7573657232202169735573657200000000000000000000000000000000000000600082015250565b6000610b6f600d83610abc565b9150610b7a82610b39565b602082019050919050565b60006020820190508181036000830152610b9e81610b62565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610bec57607f821691505b60208210811415610c0057610bff610ba5565b5b50919050565b7f6d6573736167652e6c656e677468203d3d203000000000000000000000000000600082015250565b6000610c3c601383610abc565b9150610c4782610c06565b602082019050919050565b60006020820190508181036000830152610c6b81610c2f565b9050919050565b60008160601b9050919050565b6000610c8a82610c72565b9050919050565b6000610c9c82610c7f565b9050919050565b610cb4610caf82610695565b610c91565b82525050565b6000610cc68285610ca3565b601482019150610cd68284610ca3565b601482019150819050939250505056fea2646970667358221220e6e767b72d874fcdef4b7aa0b6016bb413f127b7e3e7ac84a46d59968db5bbba64736f6c634300080a0033";

type ChatroomConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChatroomConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Chatroom__factory extends ContractFactory {
  constructor(...args: ChatroomConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Chatroom";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Chatroom> {
    return super.deploy(overrides || {}) as Promise<Chatroom>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Chatroom {
    return super.attach(address) as Chatroom;
  }
  connect(signer: Signer): Chatroom__factory {
    return super.connect(signer) as Chatroom__factory;
  }
  static readonly contractName: "Chatroom";
  public readonly contractName: "Chatroom";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChatroomInterface {
    return new utils.Interface(_abi) as ChatroomInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Chatroom {
    return new Contract(address, _abi, signerOrProvider) as Chatroom;
  }
}
